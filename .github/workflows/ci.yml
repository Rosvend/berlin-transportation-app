name: CI - Tests y Linting

on:
  push:
    branches: [ main, pr-*, dev ]
  pull_request:
    branches: [ main ]

jobs:
  lint-backend:
    name: Lint Python Code
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black flake8 isort
        cd backend
        pip install -r requirements.txt
        
    - name: Run Black (formatter check)
      run: |
        black --check backend/
      continue-on-error: true
        
    - name: Run isort (import sorting check)
      run: |
        isort --check-only backend/
      continue-on-error: true
        
    - name: Run Flake8 (linter)
      run: |
        flake8 backend/ --max-line-length=120 --exclude=__pycache__,*.pyc,env,venv
      continue-on-error: true

  test-backend:
    name: Test Backend API
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        cd backend
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-asyncio httpx
        
    - name: Run tests
      run: |
        cd backend
        pytest tests/ -v --cov=app --cov-report=xml --cov-report=term
      continue-on-error: true
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.xml
        flags: backend
        name: codecov-backend
      continue-on-error: true

  test-api-endpoints:
    name: Test API Endpoints
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        cd backend
        pip install -r requirements.txt
        
    - name: Start FastAPI server
      run: |
        cd backend
        uvicorn app.main:app --host 0.0.0.0 --port 8000 &
        sleep 10
        
    - name: Run endpoint tests
      run: |
        python scripts/test_api_endpoints.py
      continue-on-error: true

  lint-frontend:
    name: Lint Frontend (JavaScript)
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Install ESLint
      run: |
        npm install -g eslint
        
    - name: Run ESLint
      run: |
        eslint frontend/js/*.js --max-warnings 10
      continue-on-error: true
